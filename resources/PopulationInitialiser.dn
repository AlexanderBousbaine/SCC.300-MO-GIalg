
// Contains the values of the changeable parameters for an instance of the GIAlgorithm.
data GiaConfig {
	dec mutationPercentage
	dec hgtPercentage
	int numElites
	int mutationLimit
	dec mutWeights[]
	dec opWeights[]
}

// Contain the domains for each of the changeable variables described in GiaConfig.
data ConfigDomains {
// CHANGE DOMAINS TO ARRAYS OF DISCRETE VALUES ONCE I FIND OUT WHY IT WON'T LET ME DECLARE const ARRAYS
//*
	const dec MUTPERC_UPPER = 1.0
	const dec MUTPERC_LOWER = 0.01
	
	const dec HGTPERC_UPPER = 1.0
	const dec HGTPERC_LOWER = 0.01
	
	const int ELITES_UPPER = 15
	const int ELITES_LOWER = 0
	
	const int MUTLIM_UPPER = 15
	const int MUTLIM_LOWER = 0
	
	const dec MUTWEIGHT_UPPER = 1.0
	const dec MUTWEIGHT_LOWER = 0.0
	
	const dec OPWEIGHT_UPPER = 1.0
	const dec OPWEIGHT_LOWER = 0.0

//*/
/*

	const dec MUTPERC[] = new dec[](0.001, 1.0)
	const dec HGPERC[] = new dec[](0.001, 1.0)
	const int ELITES[] = new int[](0, 15)
	const int MUTLIM[] = new int[](1, 15)
	const dec MUTWEIGHT[] = new dec[](0.0, 1.0)
	const dec OPWEIGHT[] = new dec[](0.0, 1.0)
//*/

}

interface PopulationInitialiser {
	//returns an array of 'p' GiaConfig data objects containing the configuration of all membres of the population.
	GiaConfig[] generateInitialPopConfigs()
	
	//returns the diversity score of 'config' in relation to all the GiaConfigs in 'allConfigs'.
	int evaluateConfig(GiaConfig config, GiaConfig allConfigs[], int numConfigs)
	
	//prints out the values in the given lGiaConfig'
	void printConfig(GiaConfig c)
	
	dec roundTo2DP(dec d)
}